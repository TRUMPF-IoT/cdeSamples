name: .NET Core

# SPDX-FileCopyrightText: Copyright (c) 2009-2020 TRUMPF Laser GmbH, authors: C-Labs
# SPDX-License-Identifier: CC0-1.0

on:
  push:
    branches: [ master ]
    tags: [ '[1-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.201
          8.0
          7.0
          6.0
          5.0
        source-url: https://api.nuget.org/v3/index.json
        config-file: .\nuget.config
        
    # gitversion requires full history and tags
    - name: Fetch unshallow
      run: git fetch --prune --tags --unshallow

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.6
      with:
          versionSpec: '5.3.2'

    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.6
      env: 
        DOTNET_ROLL_FORWARD: Major
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true # workaround for https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/ until the execute action is updated

    - name: Install dependencies
      run: dotnet restore './src/cdeSamples.sln'

    # Workaround for gitversiontask lock exception: build a single targetframework first
    - name: Build cdeHostProject1
      run: dotnet build 'src/MyNetCoreHost/cdeHostProject1/cdeHostProject1.csproj' --configuration Release --no-restore --disable-parallel

    - name: Build Samples
      run: dotnet build './src/cdeSamples.sln' --configuration Debug --no-restore --disable-parallel

    - name: Test
      run: dotnet test './src/cdeSamples.sln' --configuration Debug --no-build --no-restore --verbosity normal
      
#    - name: Gather artifacts
#      run: (robocopy .\bin\ .\artifacts\ *.CDEX *.CDEP *.nupkg *.snupkg *.msi *.vsix cdePackager* /s /np) ^& IF %ERRORLEVEL% LEQ 1 exit 0
#      shell: cmd

#    - name: Upload artifacts
#      uses: actions/upload-artifact@v1
#      with:
#        name: CDESDK
#        path: ./artifacts

    - name: REUSE Compliance Check
      run: |
        pip3 install --user python-debian==0.1.38 # newer versions fail on Windows as of January 2021
        pip3 install --user reuse
        reuse lint
